with "config/erlang_nifs_config.gpr";
project Erlang_Nifs is

   for Languages use ("ada", "C++");

   for Library_Name use "Erlang_Nifs";
   for Library_Version use Project'Library_Name & ".so." & Erlang_Nifs_Config.Crate_Version;

   for Library_Interface use ("my_nifs");
   for Library_Auto_Init use "true";
   for Library_Dir use "lib";

   for Source_Dirs use ("src/", "config/");
   for Object_Dir use "obj/" & Erlang_Nifs_Config.Build_Profile;
   for Create_Missing_Dirs use "True";

   type Library_Type_Type is ("relocatable", "static", "static-pic");
   Library_Type : Library_Type_Type :=
     external ("ERLANG_NIFS_LIBRARY_TYPE", external ("LIBRARY_TYPE", "static-pic"));
   for Library_Kind use Library_Type;

   package Compiler is
      for Default_Switches ("Ada") use Erlang_Nifs_Config.Ada_Compiler_Switches & ("-gnata");
      for Default_Switches ("C++") use ("-I/usr/local/lib/erlang/usr/include");
   end Compiler;

   -- for Library_Builder use "gcc -bundle";
   for Archive_Builder use ("true"); -- no-op
   for Archive_Indexer use ("true"); -- no-op

   -- Runtime_Dir := "$(dirname $(gcc --print-libgcc))";
   Runtime_Dir := "/Users/andy/.config/alire/cache/dependencies/gnat_native_12.2.1_77267eb1/bin/../lib/gcc/x86_64-apple-darwin19.6.0/12.2.0";
   Runtime_Lib := Runtime_Dir & "/adalib/libgnat_pic.a";

   -- Erlang_Rts_Dir := "-noshell -eval 'io:fwrite(code:lib_dir(erts))' -eval 'init:stop()'";
   Erlang_Lib_Bundle := "/usr/local/lib/erlang/erts-14.0.2/bin/beam.smp";

   case Library_Type is
      when "static-pic" =>
         for Library_Options use ("-lc",
                                    "-lstdc++",
                                    "-L" & Runtime_Dir,
                                    Runtime_Lib,
                                    "-bundle",
                                    "-bundle_loader" & Erlang_Lib_Bundle,
                                    "-o" & Project'Library_Name & ".so");
      when others =>
         null;
   end case;

   package Binder is
      for Switches ("Ada") use ("-Es"); --  Symbolic traceback
   end Binder;

   package Install is
      for Artifacts (".") use ("share");
   end Install;

end Erlang_Nifs;
